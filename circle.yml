machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    - curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-`uname -s`-`uname -m` > /home/ubuntu/bin/docker-compose
    - chmod +x /home/ubuntu/bin/docker-compose
    - docker-compose version
    - echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list
    - wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -
    - sudo apt-get update
    - sudo apt-get install rabbitmq-server
    - sudo service rabbitmq-server start

  node:
    version: v6.9.0
  environment:
    NODE_ENV: test
    LOG_LEVEL: debug
    AUTH_DOMAIN: topcoder-dev.com
    AUTH_SECRET: secret

  services:
    - docker
    # - rabbitmq-server

test:
  pre:
    - sudo cp local/rabbitmq_delayed_message_exchange-0.0.1.ez /usr/lib/rabbitmq/lib/rabbitmq_server-*/plugins
    - sudo rabbitmq-plugins enable rabbitmq_delayed_message_exchange
    - sudo service rabbitmq-server restart

deployment:
  development:
    branch: dev
    owner: topcoder-platform
    commands:
      - docker build -t $DEV_AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:$CIRCLE_SHA1 .
      - ./deploy.sh DEV

  production:
    branch: master
    owner: topcoder-platform
    commands:
      - docker build -t $PROD_AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:$CIRCLE_SHA1 .
      - ./deploy.sh PROD


general:
  artifacts:
    - "coverage"
